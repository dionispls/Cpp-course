1.
1)Присвоение: создаются переменные соотвествующего типа в main, затем 
через точку или с помощью указателя и "->" присваивается значение.
	2) Инициализация по умолчанию: при создании структуры при определении
переменной указывается её значение.
	3) Агреганая инициализация: в main пишется строка вида
*Название структуры* *имя переменной соответствующего типа* = {... , ...};
где через запятую перечисляются значения для данных-членов структуры в том
порядке, в котором они вводились при определении структуры
	4) С помощью конструктора (в main'e пишется: *Название структуры* *имя переменной* (... , ...).

2.Можно иницилизировать переменные в конструкторе, не присваивая им значение.

3.
Идиома RAII - совокупность конструктора и деструктора, захваченные конструктором ресурсы гарантированно
возвращаются в деструкторе, когда структура прекращает свое существование.
Конструктор:
	1)Инициализация данных-членов
	2)Выполняется тело конструктора
Деструктора:
	1.Выполняется тело деструктора
	2.Уничтожаются данные-члены


4.Они используются при работе с данными, про которые заранее известны их размеры. Если нет дефицита памяти, этот инструмент использовать не стоит.

5.
	1) У перечислений с областью видимости не возникает конфликтов из-заназваний переменных.
	2) Для приведения объекта из перечисления к целочисленному типу, нужно вручную прописывать static_cast<>.






